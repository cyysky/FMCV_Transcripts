name: fmcv_transcript

services:
  records_server_gpu:
    container_name: ps3_records_server_gpu
    image: fortunemachinecomputer/fmcv_transcripts:latest
    restart: always
    profiles: [gpu]
    volumes:
      - ./data:/app/data
      - .cache:/root/.cache
      - ./passcode.txt:/app/passcode.txt
      - ./ssl_certs:/app/ssl_certs
    env_file:
      - .env
    ports:
      - "1935:1935"
    hostname: ps3_records_server
    command: "python3 recording_server_start.py"
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ['gpu']

  records_backend_gpu:
    container_name: ps3_records_backend_gpu
    image: fortunemachinecomputer/fmcv_transcripts:latest
    restart: always
    profiles: [gpu]
    volumes:
      - ./data:/app/data
      - .cache:/root/.cache
      - ./passcode.txt:/app/passcode.txt
      - ./ssl_certs:/app/ssl_certs
    env_file:
      - .env
    ports:
      - "8999:8999"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    hostname: ps3_records_backend
    command: "python3 recording_backend_start.py"
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ['gpu']

  records_streaming_gpu:
    container_name: records_streaming_gpu
    image: fortunemachinecomputer/fmcv_transcripts:latest
    restart: always
    profiles: [gpu]
    build:
      context: .
      target: gpu
    volumes:
      - ./data:/app/data
      - .cache:/root/.cache
      - ./passcode.txt:/app/passcode.txt
      - ./ssl_certs:/app/ssl_certs
    env_file:
      - .env
    ports:
      - "8686:8686"
    hostname: live_streaming_gpu
    command: "python3 m3u8_start.py"
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ['gpu']     

  records_server_cpu:
    container_name: ps3_records_server_cpu
    image: fortunemachinecomputer/fmcv_transcripts_cpu:latest
    restart: always
    profiles: [cpu]
    volumes:
      - ./data:/app/data
      - .cache:/root/.cache
      - ./passcode.txt:/app/passcode.txt
      - ./ssl_certs:/app/ssl_certs
    env_file:
      - .env
    ports:
      - "1935:1935"
    hostname: ps3_records_server
    command: "python3 recording_server_start.py"
    
  records_backend_cpu:
    container_name: ps3_records_backend_cpu
    image: fortunemachinecomputer/fmcv_transcripts_cpu:latest
    restart: always
    profiles: [cpu]
    volumes:
      - ./data:/app/data
      - .cache:/root/.cache
      - ./passcode.txt:/app/passcode.txt
      - ./ssl_certs:/app/ssl_certs
    env_file:
      - .env
    ports:
      - "8999:8999"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    hostname: ps3_records_backend
    command: "python3 recording_backend_start.py"
 
  records_streaming_cpu:
    container_name: records_streaming_cpu
    image: fortunemachinecomputer/fmcv_transcripts_cpu:latest
    restart: always
    profiles: [cpu]
    build:
      context: .
      target: cpu
    volumes:
      - ./data:/app/data
      - .cache:/root/.cache
      - ./passcode.txt:/app/passcode.txt
      - ./ssl_certs:/app/ssl_certs
    env_file:
      - .env
    ports:
      - "8686:8686"
    hostname: records_streaming_cpu
    command: "python3 m3u8_start.py"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.name=docker-cluster
      - network.host=0.0.0.0
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"

  # Optional: Kibana for visualization and management
  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
  elasticsearch-data:
    driver: local
